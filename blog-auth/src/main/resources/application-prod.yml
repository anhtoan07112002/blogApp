eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER:http://localhost:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}

spring:
  application:
    name: blog-auth-service
  cloud:
    config:
      enabled: false
  zipkin:
    enabled: false
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:anhtoan07112002@gmail.com}
    password: ${MAIL_PASSWORD:idpj lfnf abpn abqq}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Cấu hình database
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/blog_auth_db?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver

  # Cấu hình JPA/Hibernate
  jpa:
    hibernate:
      ddl-auto: none  # none cho production
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false

  # Cấu hình Redis cho session, cache
  redis:
    host: ${SPRING_REDIS_HOST:localhost}
    port: ${SPRING_REDIS_PORT:6379}
    password: ${SPRING_REDIS_PASSWORD:}
    timeout: 10000
    repositories:
      enabled: false

  # Cấu hình Jackson cho JSON
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    time-zone: UTC

  # Cấu hình size của file upload
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB

# Cấu hình Server
server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api/auth
  compression:
    enabled: true

# Cấu hình JWT
app:
  service:
    name: auth
  auth:
    jwt:
      secret: ${JWT_SECRET:QURGREFERkFERkFCRERGQURGNTY3ODkwNDU2Nzg5MEFCQ0RFRg==}
      accessTokenExpirationMs: 900000      # 15 phút
      refreshTokenExpirationMs: 604800000  # 7 ngày
      token-type: Bearer                 # Loại token
      refresh-token-cookie-name: refreshToken
      issuer: blog-app

  # Cấu hình CORS
  cors:
    allowedOrigins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080,*}
    allowedMethods: GET,POST,PUT,PATCH,DELETE,OPTIONS
    allowedHeaders: Authorization,Content-Type,X-Requested-With
    maxAge: 3600  # 1 giờ

  cache:
    prefix: blog

# Cấu hình Logging
logging:
  level:
    root: INFO
    com.blogApp: INFO
    com.blogApp.blogcommon.security: INFO
    com.blogApp.blogcommon.service.CacheService: INFO
    com.blogApp.blogauth.security: INFO
    com.blogApp.blogauth.service: INFO
    org.springframework.security: INFO
    org.springframework.data.redis: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: INFO

# Cấu hình Swagger/OpenAPI
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui
    operationsSorter: method
  packages-to-scan: com.blogApp.blogauth.controller

# Cấu hình Actuator endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when_authorized
  tracing:
    sampling:
      probability: 0.1
    enabled: false
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
    enabled: false 